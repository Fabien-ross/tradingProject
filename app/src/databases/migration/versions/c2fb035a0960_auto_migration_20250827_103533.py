"""auto_migration_20250827_103533

Revision ID: c2fb035a0960
Revises: 
Create Date: 2025-08-27 10:35:33.629453

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'c2fb035a0960'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('AssetTypes',
    sa.Column('type_id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('maj_date', sa.TIMESTAMP(), nullable=True),
    sa.PrimaryKeyConstraint('type_id')
    )
    op.create_table('Markets',
    sa.Column('market_id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('asset_number', sa.Integer(), nullable=True),
    sa.Column('status', sa.Integer(), nullable=True),
    sa.Column('website', sa.Text(), nullable=True),
    sa.Column('maj_date', sa.TIMESTAMP(), nullable=True),
    sa.PrimaryKeyConstraint('market_id')
    )
    op.create_table('SchemaVersions',
    sa.Column('version', sa.Text(), nullable=True),
    sa.Column('applied_at', sa.TIMESTAMP(), server_default='now()', nullable=True)
    )
    op.create_table('Assets',
    sa.Column('asset_id', sa.String(), nullable=False),
    sa.Column('symbol', sa.String(length=20), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('main_market_id', sa.String(), nullable=True),
    sa.Column('type_id', sa.String(), nullable=True),
    sa.Column('status', sa.Integer(), nullable=True),
    sa.Column('website', sa.Text(), nullable=True),
    sa.Column('maj_date', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['main_market_id'], ['Markets.market_id'], ),
    sa.ForeignKeyConstraint(['type_id'], ['AssetTypes.type_id'], ),
    sa.PrimaryKeyConstraint('asset_id')
    )
    op.create_table('MarketAssetTypes',
    sa.Column('market_id', sa.String(), nullable=False),
    sa.Column('type_id', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['market_id'], ['Markets.market_id'], ),
    sa.ForeignKeyConstraint(['type_id'], ['AssetTypes.type_id'], ),
    sa.PrimaryKeyConstraint('market_id', 'type_id')
    )
    op.create_table('AssetMarkets',
    sa.Column('asset_id', sa.String(), nullable=False),
    sa.Column('market_id', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['asset_id'], ['Assets.asset_id'], ),
    sa.ForeignKeyConstraint(['market_id'], ['Markets.market_id'], ),
    sa.PrimaryKeyConstraint('asset_id', 'market_id')
    )
    op.create_table('Cryptos',
    sa.Column('asset_id', sa.String(), nullable=False),
    sa.Column('quote_asset', sa.String(length=20), nullable=True),
    sa.Column('base_asset', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['asset_id'], ['Assets.asset_id'], ),
    sa.PrimaryKeyConstraint('asset_id')
    )
    op.create_table('Futures',
    sa.Column('asset_id', sa.String(), nullable=False),
    sa.Column('contract_symbol', sa.String(length=20), nullable=True),
    sa.Column('settlement_type', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['asset_id'], ['Assets.asset_id'], ),
    sa.PrimaryKeyConstraint('asset_id')
    )
    op.create_table('LiveData',
    sa.Column('asset_id', sa.String(), nullable=True),
    sa.Column('open_time', sa.TIMESTAMP(), nullable=True),
    sa.Column('time_frame', sa.String(), nullable=True),
    sa.Column('open', sa.DECIMAL(), nullable=True),
    sa.Column('high', sa.DECIMAL(), nullable=True),
    sa.Column('low', sa.DECIMAL(), nullable=True),
    sa.Column('close', sa.DECIMAL(), nullable=True),
    sa.Column('volume', sa.DECIMAL(), nullable=True),
    sa.Column('rsi', sa.DECIMAL(), nullable=True),
    sa.Column('stoch_rsi', sa.DECIMAL(), nullable=True),
    sa.Column('macd', sa.DECIMAL(), nullable=True),
    sa.Column('ema_short', sa.DECIMAL(), nullable=True),
    sa.Column('ema_mid', sa.DECIMAL(), nullable=True),
    sa.Column('ema_long', sa.DECIMAL(), nullable=True),
    sa.Column('boll_low2', sa.DECIMAL(), nullable=True),
    sa.Column('boll_low1', sa.DECIMAL(), nullable=True),
    sa.Column('boll_mid', sa.DECIMAL(), nullable=True),
    sa.Column('boll_up1', sa.DECIMAL(), nullable=True),
    sa.Column('boll_up2', sa.DECIMAL(), nullable=True),
    sa.Column('msd', sa.DECIMAL(), nullable=True),
    sa.Column('simple_return', sa.DECIMAL(), nullable=True),
    sa.Column('log_return', sa.DECIMAL(), nullable=True),
    sa.Column('obv', sa.DECIMAL(), nullable=True),
    sa.Column('vwap', sa.DECIMAL(), nullable=True),
    sa.Column('volatility', sa.DECIMAL(), nullable=True),
    sa.Column('score', sa.DECIMAL(), nullable=True),
    sa.ForeignKeyConstraint(['asset_id'], ['Assets.asset_id'], ),
    sa.UniqueConstraint('asset_id', 'time_frame', 'open_time', name='uq_livedata_asset_time')
    )
    op.create_table('Positions',
    sa.Column('position_id', sa.String(), nullable=False),
    sa.Column('asset_id', sa.String(), nullable=False),
    sa.Column('oldest_date', sa.TIMESTAMP(), nullable=False),
    sa.Column('latest_date', sa.TIMESTAMP(), nullable=True),
    sa.Column('status', sa.Integer(), nullable=False),
    sa.Column('log_message', sa.Text(), nullable=True),
    sa.Column('starting_amount', sa.Numeric(precision=20, scale=8), nullable=True),
    sa.Column('amount', sa.Numeric(precision=20, scale=8), nullable=True),
    sa.Column('usd_value', sa.Numeric(precision=20, scale=8), nullable=True),
    sa.Column('max_amount', sa.Numeric(precision=20, scale=8), nullable=True),
    sa.Column('horizon', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['asset_id'], ['Assets.asset_id'], ),
    sa.PrimaryKeyConstraint('position_id')
    )
    op.create_table('TrainingData',
    sa.Column('asset_id', sa.String(), nullable=True),
    sa.Column('open_time', sa.TIMESTAMP(), nullable=True),
    sa.Column('time_frame', sa.String(), nullable=True),
    sa.Column('open', sa.DECIMAL(), nullable=True),
    sa.Column('high', sa.DECIMAL(), nullable=True),
    sa.Column('low', sa.DECIMAL(), nullable=True),
    sa.Column('close', sa.DECIMAL(), nullable=True),
    sa.Column('volume', sa.DECIMAL(), nullable=True),
    sa.Column('rsi', sa.DECIMAL(), nullable=True),
    sa.Column('stoch_rsi', sa.DECIMAL(), nullable=True),
    sa.Column('macd', sa.DECIMAL(), nullable=True),
    sa.Column('ema_short', sa.DECIMAL(), nullable=True),
    sa.Column('ema_mid', sa.DECIMAL(), nullable=True),
    sa.Column('ema_long', sa.DECIMAL(), nullable=True),
    sa.Column('boll_low2', sa.DECIMAL(), nullable=True),
    sa.Column('boll_low1', sa.DECIMAL(), nullable=True),
    sa.Column('boll_mid', sa.DECIMAL(), nullable=True),
    sa.Column('boll_up1', sa.DECIMAL(), nullable=True),
    sa.Column('boll_up2', sa.DECIMAL(), nullable=True),
    sa.Column('msd', sa.DECIMAL(), nullable=True),
    sa.Column('simple_return', sa.DECIMAL(), nullable=True),
    sa.Column('log_return', sa.DECIMAL(), nullable=True),
    sa.Column('obv', sa.DECIMAL(), nullable=True),
    sa.Column('vwap', sa.DECIMAL(), nullable=True),
    sa.Column('volatility', sa.DECIMAL(), nullable=True),
    sa.Column('score', sa.DECIMAL(), nullable=True),
    sa.ForeignKeyConstraint(['asset_id'], ['Assets.asset_id'], ),
    sa.UniqueConstraint('asset_id', 'time_frame', 'open_time', name='uq_trainingdata_asset_time')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('TrainingData')
    op.drop_table('Positions')
    op.drop_table('LiveData')
    op.drop_table('Futures')
    op.drop_table('Cryptos')
    op.drop_table('AssetMarkets')
    op.drop_table('MarketAssetTypes')
    op.drop_table('Assets')
    op.drop_table('SchemaVersions')
    op.drop_table('Markets')
    op.drop_table('AssetTypes')
    # ### end Alembic commands ###
